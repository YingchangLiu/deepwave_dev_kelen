Born modelling with the scalar wave equation
============================================

Derivation
^^^^^^^^^^

We will start with a short but slightly hand-wavy derivation. Using a Taylor expansion,

.. math::
    :label: taylor

    \frac{1}{\left(c_0+h_c\right)^2} \approx \frac{1}{c_0^2}-\frac{2h_c}{c_0^3}.

Inserting this into the scalar wave equation, with :math:`c_0` as the background velocity model and :math:`h_c` as a perturbation to it, and assuming that the wavefield can be approximated by a summation of unscattered waves, :math:`u_0`, and singly scattered waves, :math:`u_1`, yields

.. math::
    :label: wave_equation
    
    \Delta \left(u_0+u_1\right) - \left(\frac{1}{c_0^2}-\frac{2h_c}{c_0^3}\right)\left(\ddot u_0+\ddot u_1\right) = f,

where :math:`\Delta` is the Laplacian, :math:`\ddot u_0` is the second time derivative of wavefield :math:`u_0`, and :math:`f` is the source time series. Disregarding terms above first order scattering, we can separate this into two terms that match our intuition for scattering,

.. math::
    :label: u_0a
    
    \Delta u_0 - \frac{1}{c_0^2}\ddot u_0 = f,

and

.. math::
    :label: u_1a

    \Delta u_1 - \frac{1}{c_0^2}\ddot u_1 = - \frac{2h_c}{c_0^3}\ddot u_0.

This shows that Born modelling consists of two wavefields propagating using the background velocity model: one for unscattered waves (:math:`u_0`) that uses the regular source term (:math:`f`), and one for singly scattered waves (:math:`u_1`) that is generated by interactions of :math:`u_0` with the scattering model :math:`h_c`.

Now for a slightly different derivation. We apply the Taylor expansion again, but this time to the wavefield,

.. math::
    :label: taylor_wave

    u^t|_{c_0+h_c} \approx u^t|_{c_0} + \left.\frac{d u^t}{d c}\right|_{c_0}h_c,

where :math:`u^t` is the wavefield at time step :math:`t`. Using the scalar wave equation, with the second order accurate finite difference approximation of the second order time derivative,

.. math::
    :label: wave_equation_fd

    u^t = c^2h_t^2\left(\Delta u^{t-1}-f^{t-1}\right)+2u^{t-1}-u^{t-2},

where :math:`h_t` is the finite difference step size, we can derive the scattered term in Equation :eq:`taylor_wave` that is produced by the model perturbation :math:`h_c`. Differentiating :eq:`wave_equation_fd`,

.. math::
    :label: first_order_1

    \frac{d u^t}{d c} = 2ch_t^2\left(\Delta u^{t-1}-f^{t-1}\right)+c^2h_t^2\Delta\frac{d u^{t-1}}{d c}+2\frac{d u^{t-1}}{d c}-\frac{d u^{t-2}}{d c}.

Using, from Equation :eq:`wave_equation_fd`,

.. math::
    
    c^2h_t^2\left(\Delta u^{t-1}-f^{t-1}\right) = u^t -2u^{t-1}+u^{t-2},

rearranged into

.. math::

    2ch_t^2\left(\Delta u^{t-1}-f^{t-1}\right) = \frac{2}{c}\left(u^t -2u^{t-1}+u^{t-2}\right),

we get, on substituting into Equation :eq:`first_order_1`,

.. math::
    :label: first_order_2

    \frac{d u^t}{d c} = \frac{2}{c}\left(u^t-2u^{t-1}+u^{t-2}\right)+c^2h_t^2\Delta\frac{d u^{t-1}}{d c}+2\frac{d u^{t-1}}{d c}-\frac{d u^{t-2}}{d c}.

This implies (by comparison with the scalar wave equation, such as Equation :eq:`wave_equation_fd`) that we can calculate :math:`\left.\frac{d u^t}{d c}\right|_{c_0}h_c`
by solving the wave equation with a source term of

.. math::

    -\frac{2h_c}{c_0^3h_t^2}\left(\left.u^{t+1}\right|_{c_0}-\left.2u^{t}\right|_{c_0}+\left.u^{t-1}\right|_{c_0}\right),

using the linearity of the wave equation to scale by :math:`h_c`. This is the same as before (in Equation :eq:`first_order_1`).

Implementation
^^^^^^^^^^^^^^

Deepwave's Born propagator simultaneously propagates two wavefields: the background wavefield (:math:`u_0` and :math:`u^t` in the two derivations above, respectively), and the scattered wavefield (:math:`u_1` and :math:`\left.\frac{d u^t}{d c}\right|_{c_0}h_c`). The details of how these wavefields are propagated, such as the PML, are the same as for the regular :doc:`scalar <scalar>` propagator. The only difference is that at each time step the interaction of the background wavefield with the scattering model is calculated and used as a source in the scattered wavefield.

The output state from the Born propagator contains twice as many elements as the regular scalar propagator because it is propagating two wavefields. Receiver data can be recorded from both of these wavefields by specifying the `bg_receiver_locations` (record from the background wavefield) and `receiver_locations` (record from the scattered wavefield) input parameters.

The velocity model that is provided as input to the Born propagator is used as the background velocity model :math:`c_0`, and the scattering model that is provided as input is used as :math:`h_c`. For a small :math:`h_c` (so the linear approximation in Equation :eq:`taylor` is reasonable), the output of the regular scalar propagator with the velocity model :math:`c_0+h_c` should be approximately the same as the sum of the background and scattered outputs of the Born propagator with velocity model :math:`c_0` and scattering model :math:`h_c`.

One propagation time step can be performed by applying Equation :eq:`scalar_timestep_matrix` to update the background wavefields. To update the scattered wavefield, the Deepwave implementation uses Equation :eq:`first_order_1` rather than :eq:`first_order_2`, yielding the matrix

.. math::

    \begin{pmatrix}
    u^{t+1} \\
    u^{t} \\
    z^{t} \\
    p^{t} \\
    u_s^{t+1} \\
    u_s^{t} \\
    z_s^{t} \\
    p_s^{t} \\
    r^{t} \\
    r_s^{t} \\
    \end{pmatrix} = 
    \begin{pmatrix}
    c^2h_t^2(1+b)\left((1+b)\partial_x^2 +\partial_x(b)\partial_x\right) + 2 & -1 & c^2h_t^2a & c^2h_t^2(1+b)\left(\partial_x a\right) & 0 & 0 & 0 & 0 & -c^2h_t^2 \\
    1 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\
    b\left((1+b)\partial_{x}^2+\partial_x(b)\partial_x\right) & 0 & a & b\left(\partial_x a\right) & 0 & 0 & 0 & 0 & 0\\
    b\partial_x & 0 & 0 & a & 0 & 0 & 0 & 0 & 0 \\
    2ch_ch_t^2(1+b)\left((1+b)\partial_x^2 +\partial_x(b)\partial_x\right) & 0 & 2ch_ch_t^2a & 2ch_ch_t^2(1+b)\left(\partial_x a\right) & c^2h_t^2(1+b)\left((1+b)\partial_x^2 +\partial_x(b)\partial_x\right) + 2 & -1 & c^2h_t^2a & c^2h_t^2(1+b)\left(\partial_x a\right) & -2ch_ch_t^2 \\
    0 & 0 & 0 & 0 & 1 & 0 & 0 & 0 & 0 \\
    0 & 0 & 0 & 0 & b\left((1+b)\partial_{x}^2+\partial_x(b)\partial_x\right) & 0 & a & b\left(\partial_x a\right) & 0\\
    0 & 0 & 0 & 0 & b\partial_x & 0 & 0 & a & 0\\
    \delta_r & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0\\
    0 & 0 & 0 & 0 & \delta_r^s & 0 & 0 & 0 & 0\\
    \end{pmatrix}
    \begin{pmatrix}
    u^{t} \\
    u^{t-1} \\
    z^{t-1} \\
    p^{t-1} \\
    u_s^{t} \\
    u_s^{t-1} \\
    z_s^{t-1} \\
    p_s^{t-1} \\
    f^t
    \end{pmatrix}
